{
    "233204570447282186": {
        "level": 7,
        "exp": 210
    },
    "672695117773144066": {
        "level": 4,
        "exp": 47
    },
    "653594924398149643": {
        "level": 2,
        "exp": 5
    },
    "707940710334332963": {
        "level": 2,
        "exp": 2
    },
    "417046597633835009": {
        "level": 5,
        "exp": 93
    },
    "137752907675074560": {
        "level": 3,
        "exp": 8
    },
    "730372929145143366": {
        "level": 2,
        "exp": 5
    },
    "443181640236400651": {
        "level": 2,
        "exp": 1
    },
    "498316864863338507": {
        "level": 2,
        "exp": 2
    },
    "311886001549344769": {
        "level": 2,
        "exp": 4
    },
    "635167345563795478": {
        "level": 3,
        "exp": 7
    },
    "693449718046392322": {
        "level": 2,
        "exp": 1
    },
    "172002275412279296": {
        "level": 2,
        "exp": 2
    },
    "270904126974590976": {
        "level": 2,
        "exp": 1
    },
    "408929732508254219": {
        "level": 2,
        "exp": 3
    },
    "225647195771240448": {
        "level": 2,
        "exp": 2
    },
    "179981649478549504": {
        "level": 2,
        "exp": 1
    },
    "387886103249682432": {
        "level": 2,
        "exp": 1
    },
    "729702212590239786": {
        "level": 2,
        "exp": 2
    }
}


class ExperienceCount:

    def __init__(self, user, experience):
        self.user = user
        self.experience = experience

    def __repr__(self):
        return f'<@{self.user}> has {self.experience} experience'


def get_top_experience(data):
    users = []
    for k, v in data.items():
        users.append(ExperienceCount(k, v['experience']))
    return sorted(users, key=lambda x: x.experience, reverse=True)

a = get_top_experience(data)
